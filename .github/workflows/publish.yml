name: Manual Publish to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      skip_version_bump:
        description: 'Skip version bump (publish current version)'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  manual-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run type checking
        run: npm run type-check

      - name: Run linting
        run: npm run lint:check

      - name: Build package
        run: npm run build

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        if: ${{ !inputs.skip_version_bump }}
        id: version-bump
        run: |
          NEW_VERSION=$(npm version ${{ inputs.version_type }} --no-git-tag-version)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"
          
          # Commit and push changes
          git add package.json package-lock.json
          git commit -m "chore: manually bump version to $NEW_VERSION [skip ci]"
          git tag $NEW_VERSION
          git push origin main
          git push origin $NEW_VERSION

      - name: Get current version (if skipping bump)
        if: ${{ inputs.skip_version_bump }}
        id: current-version
        run: |
          CURRENT_VERSION="v$(node -p "require('./package.json').version")"
          echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Using current version: $CURRENT_VERSION"

      - name: Check npm authentication
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Create GitHub Release
        if: ${{ !inputs.skip_version_bump }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version-bump.outputs.new_version }}
          release_name: Manual Release ${{ steps.version-bump.outputs.new_version }}
          body: |
            ## Manual Release
            
            This release was manually triggered via GitHub Actions workflow.
            
            ### Version Bump Type: ${{ inputs.version_type }}
            
            ---
            
            ### Installation
            ```bash
            npm install vue-json-miller-editor@${{ steps.version-bump.outputs.new_version }}
            ```
          draft: false
          prerelease: false

      - name: Notify success
        run: |
          VERSION="${{ steps.version-bump.outputs.new_version || steps.current-version.outputs.new_version }}"
          echo "‚úÖ Successfully published vue-json-miller-editor to npm!"
          echo "üè∑Ô∏è Version: $VERSION"
          echo "üì¶ NPM: https://www.npmjs.com/package/vue-json-miller-editor"